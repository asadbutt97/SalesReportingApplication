@page
@model SalesReportingApplication.Pages.SalesTransactions.IndexModel
@{
    ViewData["Title"] = "Sales Transactions";
    var userId = HttpContext.Session.GetInt32("UserID");
}

@if (userId.HasValue)
{


    <h2>Sales Transactions</h2>

    <p>
        <a asp-page="/SalesTransactions/Create" class="btn btn-primary">Add New</a>
    </p>

    <table class="table">
        <thead>
            <tr>
                <th>Sales Item</th>
                <th>Sales Date</th>
                <th>User Name</th>
                <th>Amount</th>
                <th>Updated Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="transactionListBody"></tbody>
    </table>

    @section Scripts {
    <script>

        async function fetchAndPopulateTransactions() {
            try {
                const response = await fetch('/sales/transactions');
                const transactions = await response.json();


                document.getElementById('transactionListBody').innerHTML = '';

                transactions.forEach(transaction => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                                        <td>${transaction.salesItem}</td>
                                        <td>${new Date(transaction.salesDate).toLocaleDateString()}</td>
                                        <td>${transaction.userProfile.userName}</td>
                                        <td>${transaction.amount}</td>
                                        <td>${new Date(transaction.updatedDate).toLocaleDateString()}</td>
                                        <td>
                                            <a href="/SalesTransactions/Edit/${transaction.transactionID}" class="btn btn-primary">Edit</a>
                                                    <button class="btn btn-danger" onclick="confirmDelete(${transaction.transactionID})">Delete</button>
                                        </td>
                                    `;
                    document.getElementById('transactionListBody').appendChild(row);
                });
            } catch (error) {
                console.error('Error fetching transactions:', error);
            }
        }

        function confirmDelete(transactionID) {
            if (confirm('Are you sure you want to delete this transaction?')) {

                fetch(`/sales/transactions/${transactionID}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (response.ok) {

                            window.location.reload();
                        } else {

                            console.error('Failed to delete transaction.');
                        }
                    })
                    .catch(error => {
                        console.error('Error occurred:', error);
                    });
            }
        }


        document.addEventListener('DOMContentLoaded', fetchAndPopulateTransactions);
    </script>

}
}
else
{
    <script>window.location.href = '/Login';</script>
}
